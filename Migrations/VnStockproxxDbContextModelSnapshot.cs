// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VnStockproxx.Models;

#nullable disable

namespace VnStockproxx.Migrations
{
    [DbContext(typeof(VnStockproxxDbContext))]
    partial class VnStockproxxDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VnStockproxx.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("categoryName")
                        .UseCollation("Vietnamese_CI_AS");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("VnStockproxx.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CateId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content")
                        .UseCollation("Vietnamese_CI_AS");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(299)
                        .HasColumnType("nvarchar(299)")
                        .HasColumnName("createdBy");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("createdDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(299)
                        .HasColumnType("nvarchar(299)");

                    b.Property<string>("ImageContent")
                        .IsRequired()
                        .HasMaxLength(299)
                        .HasColumnType("nvarchar(299)")
                        .HasColumnName("imageContent")
                        .UseCollation("Vietnamese_CI_AS");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasMaxLength(299)
                        .HasColumnType("nvarchar(299)")
                        .HasColumnName("tag");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("title")
                        .UseCollation("Vietnamese_CI_AS");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updatedDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int")
                        .HasColumnName("viewCount");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CateId" }, "IX_Post_CateId");

                    b.ToTable("Post", (string)null);
                });

            modelBuilder.Entity("VnStockproxx.Models.Post", b =>
                {
                    b.HasOne("VnStockproxx.Models.Category", "Cate")
                        .WithMany("Posts")
                        .HasForeignKey("CateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Post_Category");

                    b.Navigation("Cate");
                });

            modelBuilder.Entity("VnStockproxx.Models.Category", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
